name: Tests

on: [push, pull_request]

jobs:
  Linting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Install and set up Poetry
        run: |
          curl -fsS -o get-poetry.py https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
          python get-poetry.py --preview -y
          source $HOME/.poetry/env
          poetry config virtualenvs.in-project true
      - name: Install dependencies
        run: |
          source $HOME/.poetry/env
          make install
      - name: Linting
        run: |
          source $HOME/.poetry/env
          make lint

  Tests:
    needs: Linting
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: [3.6, 3.7, 3.8, pypy3]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get full python version
        id: full-python-version
        run: |
          echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      - name: Install and set up Poetry
        run: |
          curl -fsS -o get-poetry.py https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
          python get-poetry.py --preview -y
          source $HOME/.poetry/env
          poetry config virtualenvs.in-project true
      - name: Set up cache
        uses: actions/cache@v1
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: |
          source $HOME/.poetry/env
          make install
      - name: Run pytest
        run: |
          source $HOME/.poetry/env
          make coverage
